{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","components/InputField/InputField.js","components/NewMovie/NewMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","defaultProps","MoviesList","movies","map","movie","key","imdbId","InputField","name","value","label","onChange","hasError","errorMessage","onBlur","htmlFor","type","ClassNames","id","urlRegEx","initialState","titleError","imgUrlError","imdbUrlError","imdbIdError","NewMovie","state","onAdd","event","preventDefault","props","addMovie","setState","target","validateText","validateUrl","match","this","formHasError","onSubmit","disabled","PureComponent","App","moviesFromServer","prevState","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fbec18ea.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './MovieCard.scss';\n\nexport const MovieCard = ({ title, description, imgUrl, imdbUrl }) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n\nMovieCard.propTypes = {\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  imgUrl: PropTypes.string.isRequired,\n  imdbUrl: PropTypes.string.isRequired,\n};\n\nMovieCard.defaultProps = {\n  description: '',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\nexport const MoviesList = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      description: PropTypes.string,\n      imgUrl: PropTypes.string.isRequired,\n      imdbUrl: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nMoviesList.defaultProps = {\n  movies: [],\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ClassNames from 'classnames';\n\nexport const InputField = ({\n  name,\n  value,\n  label,\n  onChange,\n  hasError,\n  errorMessage,\n  onBlur,\n}) => (\n  <div className=\"field\">\n    <label\n      htmlFor={name}\n      className=\"label\"\n    >\n      {label}\n    </label>\n\n    <input\n      type=\"text\"\n      className={ClassNames('input', {\n        'is-danger': hasError,\n      })}\n      name={name}\n      id={name}\n      value={value}\n      onChange={onChange}\n      onBlur={onBlur}\n    />\n\n    {hasError && (\n      <p className=\"help is-danger\">\n        {errorMessage}\n      </p>\n    )}\n  </div>\n);\n\nInputField.propTypes = {\n  name: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  hasError: PropTypes.bool,\n  errorMessage: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n  onBlur: PropTypes.func.isRequired,\n};\n\nInputField.defaultProps = {\n  hasError: false,\n  errorMessage: '',\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '../InputField';\n\n// eslint-disable-next-line max-len\nconst urlRegEx = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/;\n\nconst initialState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  titleError: false,\n  imgUrlError: false,\n  imdbUrlError: false,\n  imdbIdError: false,\n};\n\nexport class NewMovie extends PureComponent {\n  state = {\n    ...initialState,\n  };\n\n  onAdd = (event) => {\n    event.preventDefault();\n\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imdbIdError,\n      imdbUrlError,\n      imgUrlError,\n    } = this.state;\n\n    if (titleError || imdbIdError || imdbUrlError || imgUrlError) {\n      return;\n    }\n\n    this.props.addMovie({\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n    });\n\n    this.setState({\n      ...initialState,\n    });\n  };\n\n  onChange = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      [`${name}Error`]: !value,\n    });\n  };\n\n  validateText = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [`${name}Error`]: !value,\n    });\n  };\n\n  validateUrl = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [`${name}Error`]: !value.match(urlRegEx),\n    });\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      titleError,\n      imgUrlError,\n      imdbUrlError,\n      imdbIdError,\n    } = this.state;\n\n    const formHasError = titleError || !title\n      || imdbIdError || !imdbId\n      || imdbUrlError || !imdbUrl\n      || imgUrlError || !imgUrl;\n\n    return (\n      <form\n        className=\"form\"\n        onSubmit={event => (\n          this.onAdd(event)\n        )}\n      >\n        <h2 className=\"title is-3\">Add movie</h2>\n        <InputField\n          name=\"title\"\n          value={title}\n          label=\"Movie title:\"\n          onChange={this.onChange}\n          hasError={titleError}\n          errorMessage=\"Please enter the title\"\n          onBlur={this.validateText}\n        />\n\n        <div className=\"field\">\n          <label\n            htmlFor=\"description\"\n            className=\"label\"\n          >\n            Movie description:\n          </label>\n\n          <textarea\n            className=\"textarea\"\n            name=\"description\"\n            id=\"description\"\n            value={description}\n            onChange={this.onChange}\n          />\n        </div>\n\n        <InputField\n          name=\"imgUrl\"\n          value={imgUrl}\n          label=\"Image link:\"\n          onChange={this.onChange}\n          hasError={imgUrlError}\n          errorMessage=\"Please enter valid image link\"\n          onBlur={this.validateUrl}\n        />\n\n        <InputField\n          name=\"imdbUrl\"\n          value={imdbUrl}\n          label=\"Movie link:\"\n          onChange={this.onChange}\n          hasError={imdbUrlError}\n          errorMessage=\"Please enter valid movie link\"\n          onBlur={this.validateUrl}\n        />\n\n        <InputField\n          name=\"imdbId\"\n          value={imdbId}\n          label=\"Movie id:\"\n          onChange={this.onChange}\n          hasError={imdbIdError}\n          errorMessage=\"Please enter movie id\"\n          onBlur={this.validateText}\n        />\n\n        <button\n          type=\"submit\"\n          className=\"button is-primary\"\n          disabled={formHasError}\n        >\n          Add movie\n        </button>\n      </form>\n    );\n  }\n}\n\nNewMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie) => {\n    this.setState(prevState => ({\n      movies: [...prevState.movies, movie],\n    }));\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n\n        <div className=\"sidebar\">\n          <NewMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}